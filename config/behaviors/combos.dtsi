// ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
// │ C O M B O S                                                                                                                                       │
// ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
// 					                                     38 KEY MATRIX / LAYOUT MAPPING
//
//		        	╭────────────────────┬────────────────────╮              ╭─────────────────────┬─────────────────────╮ 
//			        │  0   1   2   3   4 │  5   6   7   8   9 │              │ LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 │
//		         ╭──╯ 10  11  12  13  14 │ 15  16  17  18  19 ╰───╮      ╭───╯ LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 ╰───╮
//		         │ 20 21  22  23  24  25 │ 26  27  28  29  30  31 │      │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
//		         ╰──────────╮ 32  33  34 │ 35  36  37 ╭───────────╯      ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
//				        	╰────────────┴────────────╯                              ╰─────────────┴─────────────╯



#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50



// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
// 8-argument version of ZMK_COMBO defined in base.keymap

// Horizontal combos - left hand
//ZMK_COMBO(esc, &kp ESC, 0 1, 0 1 2 3 4 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(capslock, &kp CAPSLOCK, 12 17, 0 1 2 3 4 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(cut, &kp LC(X), 22 21, 0 1 2 3 4 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(copy, &kp LC(INS), 23 22, 0 1 2 3 4 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(paste, &kp LS(INS), 24 23, 0 1 2 3 4 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)

// Horizontal combos - right hand
ZMK_COMBO(lpar, &kp LPAR, 16 17, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rpar, &kp RPAR, 17 18, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lt, &kp LT, 16 17, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(gt, &kp GT, 17 18, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(lbkt, &kp LBKT, 27 28, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt, &kp RBKT, 28 29, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lbrc, &kp LBRC, 27 28, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc, &kp RBRC, 28 29, 0 1 2 5, COMBO_TERM_FAST, COMBO_IDLE_FAST)

// Vertical combos - left hand
ZMK_COMBO(at, &kp AT, 1 11, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash, &kp HASH, 2 12, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr, &kp DLLR, 3 13, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT, 4 14, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(grave, &kp GRAVE, 11 22, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(bslh, &kp BSLH, 12 23, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(equal, &kp EQUAL, 13 24, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(tilde, &kp TILDE, 14 25, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

// Vertical combos - right hand
ZMK_COMBO(caret, &kp CARET, 5 15, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(plus, &kp PLUS, 6 16, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star, &kp STAR, 7 17, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps, &kp AMPS, 8 18, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(under, &kp UNDER, 15 26, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus, &kp MINUS, 16 27, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(fslh, &kp FSLH, 17 28, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe, &kp PIPE, 18 29, 0 1 2 5, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)