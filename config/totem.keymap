//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
//
// ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
// │ I N C L U D E S                                                                                                                                   │
// ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
//

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <input/processors.dtsi>

// ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
// │ D E F I N I T I O N S                                                                                                                             │
// ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯


// DEFINE LAYERS
#define Base        0
#define Nav         1
#define Sym         2
#define Fun         3
#define Game        4
#define Gameplus    5
#define Mouse		6
#define Sys			7

#define XXX &none
#define ___ &trans



// DEFINE MAC-SPECIFIC KEYS
#define APL_LAUNCHPAD          C_AC_DESKTOP_SHOW_ALL_APPLICATIONS
#define APL_LP                 APL_LAUNCHPAD
#define APL_MISSION_CONTROL    C_AC_DESKTOP_SHOW_ALL_WINDOWS
#define APL_MC                 APL_MISSION_CONTROL
#define APL_SPOTLIGHT          C_AC_SEARCH
#define APL_SP                 APL_SPOTLIGHT
#define APL_CUT                LG(X)
#define APL_COPY               LG(C)
#define APL_PASTE              LG(V)
#define APL_UNDO               LG(Z)
#define APL_REDO               LG(LS(Z))
#define APL_APP_WINDOWS        LG(LC(DOWN))
#define APL_APPWIN             APL_APP_WINDOWS
#define APL_NEXT_WINDOW        LG(GRAVE)
#define APL_WINN               APL_NEXT_WINDOW
#define APL_PREVIOUS_WINDOW    LG(TILDE)
#define APL_WINP               APL_PREVIOUS_WINDOW
#define APL_NEXT_DESKTOP       LG(LC(RIGHT))
#define APL_DKTN               APL_NEXT_DESKTOP
#define APL_PREVIOUS_DESKTOP   LG(LC(LEFT))
#define APL_DKTP               APL_PREVIOUS_DESKTOP
#define APL_FIND_NEXT          LG(G)
#define APL_FDNXT              APL_FIND_NEXT
#define APL_FIND_PREVIOUS      LG(LS(G))
#define APL_FDPRV              APL_FIND_PREVIOUS
#define APL_NEXT_WORD          LA(RIGHT)
#define APL_WRDN               APL_NEXT_WORD
#define APL_PREVIOUS_WORD      LA(LEFT)
#define APL_WRDP               APL_PREVIOUS_WORD
#define APL_START_OF_LINE      LG(LEFT)
#define APL_STTL               APL_START_OF_LINE
#define APL_END_OF_LINE        LG(RIGHT)
#define APL_ENDL               APL_END_OF_LINE


// ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
// │ M A C R O S                                                                                                                                       │
// ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
	};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
	};

// SHIFT HELPER - easier re-mapping of shifted characters //
#define DEFINE_SHIFT_KEY(_behavior_name, _normal_key, _shifted_key)         \
    _behavior_name: _behavior_name {                                        \
      compatible = "zmk,behavior-mod-morph";                                \
      #binding-cells = <0>;                                                 \
      bindings = <_normal_key>, <_shifted_key>;                             \
      mods = <(MOD_LSFT|MOD_RSFT)>;                                         \
    };

// TAPDANCE HELPER - one-line tap dance creation //
#define DEFINE_DOUBLE_TAP_KEY(_behavior_name, _normal_key, _double_tap_key) \
    _behavior_name: _behavior_name {                                        \
      compatible = "zmk,behavior-tap-dance";                                \
      #binding-cells = <0>;                                                 \
      tapping-term-ms = <200>;                                              \
      bindings = <_normal_key>, <_double_tap_key>;                          \
    };

// COMBO HELPER - one-line combo creating //
#define COMBO(NAME, BINDINGS, KEYPOS, LAYERS)                               \
  combo_##NAME {                                                            \
    timeout-ms = <50>;                                                      \
    bindings = <BINDINGS>;                                                  \
    key-positions = <KEYPOS>;                                               \
    layers = <LAYERS>;                                                      \
  };
  
&mmv {
    x-input-code = <INPUT_REL_X>;
    y-input-code = <INPUT_REL_Y>;
    time-to-max-speed-ms = <300>;
    acceleration-exponent = <1>;
	};

&msc {
    x-input-code = <INPUT_REL_HWHEEL>;
    y-input-code = <INPUT_REL_WHEEL>;
    time-to-max-speed-ms = <300>;
    acceleration-exponent = <0>;
	};

// ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
// │ B E H A V I O R S                                                                                                                                 │
// ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
/ {
    behaviors {
	
	DEFINE_DOUBLE_TAP_KEY(td_par, &kp LPAR, &kp RPAR)
    DEFINE_DOUBLE_TAP_KEY(td_brc, &kp LBRC, &kp RBRC)
    DEFINE_DOUBLE_TAP_KEY(td_bkt, &kp LBKT, &kp RBKT)
    DEFINE_DOUBLE_TAP_KEY(td_lt, &kp LT, &kp GT)
    DEFINE_DOUBLE_TAP_KEY(td_slh, &kp FSLH, &kp BSLH)
    DEFINE_SHIFT_KEY(comma_semi, &kp COMMA, &kp SEMI)
    DEFINE_SHIFT_KEY(dot_colon, &kp DOT, &kp COLON)
    DEFINE_SHIFT_KEY(qu_excl, &kp QMARK, &kp EXCL)
    DEFINE_SHIFT_KEY(redo, &kp K_UNDO, &kp K_REDO)
	
	conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <7>;
        };
		
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <10 11 12 13 14>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <150>;
            hold-trigger-key-positions = <15 16 17 18 19>;
            hold-trigger-on-release;
		};
    };

// ╭───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
// │ C O M B O S                                                                                                                                       │
// ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
// 					                                     38 KEY MATRIX / LAYOUT MAPPING
//												    ╭────────────────────┬────────────────────╮ 
//												    │  0   1   2   3   4 │  5   6   7   8   9 │
//						 						 ╭──╯ 10  11  12  13  14 │ 15  16  17  18  19 ╰───╮
//						 						 │ 20 21  22  23  24  25 │ 26  27  28  29  30  31 │
//												 ╰──────────╮ 32  33  34 │ 35  36  37 ╭───────────╯
//							            					╰────────────┴────────────╯

    combos {
        compatible = "zmk,combos";

        COMBO(caps, &kp CAPS, 13 16, 0 1 2 3 4)
		COMBO(undo, &kp K_UNDO, 21 22, 0 1 2 3 4 5 6)
        COMBO(copy, &kp K_COPY, 22 23, 0 1 2 3 4 5 6)
        COMBO(paste, &kp K_PASTE, 23 24, 0 1 2 3 4 5 6)
		COMBO(backpace, &kp BSPC, 7 8, 0 1 2 3 4 5 6)
		COMBO(delete, &kp DEL, 8 9, 0 1 2 3 4 5 6)
		COMBO(tab, &kp TAB, 0 1, 0 1 2 3 4 5 6)
    };




    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
					 &kp Q         &kp W         &kp E         &kp R         &kp T        	 &kp Y    	   &kp U         &kp I         &kp O         &kp P
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
				  &hml LGUI A  	&hml LALT S   &hml LCTRL D &hml LSHFT F  	 &kp G        	 &kp H    	&hmr RSHFT J  &hmr RCTRL K  &hmr RALT L  &hmr RGUI SEMICOLON
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	&kp ESCAPE  	&kp Z          &kp X       	 &kp C         &kp V         &kp B        	 &kp N    	   &kp M       &kp COMMA      &kp DOT      &kp SLASH   &kp APOSTROPHE
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤ ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
											 &mt LCTRL DEL   &lt 2 TAB    &lt 6 SPACE    	&kp RET  	&lt 1 BSPC    &lt 3 ESCAPE
//                            				╰─────────────┴─────────────┴─────────────╯ ╰─────────────┴─────────────┴─────────────╯
            >;
        };

Nav {
    display-name = "Nav";
    bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
					&kp COMMA    &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp LBRC      	&kp RBRC     &kp PG_UP     		___         &kp PG_DN    ___
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
					&kp DOT      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp LBKT      	&kp RBKT     &kp LEFT      &kp UP        &kp RIGHT    	___
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
      &kp SLASH    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp LPAR     	&kp RPAR      &kp HOME      &kp DOWN     &kp END      	___         	___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                         ___           ___           ___          ___         ___          ___
// 											 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
    >;
};

        Sym {
            display-name = "Sym";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
					&kp EXCL  	  &kp AT  		&kp HASH    &kp DOLLAR    &kp PERCENT      &kp CARET   &kp AMPERSAND &kp KP_ASTERISK  &kp SQT  		&kp DQT
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
					  ___    	    ___	    	  ___    	  &kp MINUS    &kp UNDER        &kp EQUAL     &kp PLUS       ___         	___   		  ___
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	    ___    		  ___    	    ___ 	  	  ___    	  &kp PIPE		&kp LT     	    &kp GT          ___      	 ___            ___        &kp BSLH  	    ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
												  ___    	    ___           ___             ___      		___          ___
//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };


//GAME LAYER GATEWAY
        Fun {
            display-name = "Fun";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
					&kp F12  	   &kp F8   	 &kp F8   	  &kp F9  		  ___	 	 	  ___   		___  	  	  ___  	   		___  	  	  ___
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
					&kp F11        &kp F4   	 &kp F5       &kp F6   		  ___    		  ___  	  		___  		  ___  	  		___  		  ___
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	   ___  		&kp F10        &kp F1  		 &kp F2   	  &kp F3   		  ___    		  ___  	  		___  		  ___  	   		___   		  ___ 	  	  &to 4 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
												  ___ 	  		___  		  ___    		  ___  	  		___  		  ___
//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        Gaming {
            display-name = "Game";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
					 &kp Q         &kp W  		 &kp E         &kp R		 &kp T     		 &kp Y  	   &kp U  		 &kp I  	  &kp O  		 &kp P
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
					 &kp A         &kp S  		 &kp D         &kp F         &kp G     		 &kp H  	   &kp J  		 &kp K  	  &kp L  		 &sl 5
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	 &kp ESCAPE  	 &kp Z    	   &kp X  		 &kp C         &kp V         &kp B     		 &kp N  	   &kp M  	   &kp COMMA   	  &kp DOT 	   &kp SLASH   	  &to 0
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
											   &kp LCTRL  	   &sl 5	      ___     		  ___	   	   &sl 5  		  ___
//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        Gaming+ {
            display-name = "Game+";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
				 &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4 &kp NUMBER_5    	  ___ 		    ___    		  ___  	  		___  	 	  ___
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
				 &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0	 	  ___        	___        	  ___  	  		___ 		  ___
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	 &kp GRAVE  	&kp F1    	  &kp F2        &kp F3         &kp F4        &kp F5           ___       	___       	  ___  	  		___  		  ___   	 	___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
												  ___           ___           ___     	      ___        	___       	  ___
//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };
		
		Mouse {
            display-name = "Mouse";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
				      ___  	      	___  		  ___  	  		___  		  ___    		 ___     	&msc SCRL_UP	  ___      &msc SCRL_DOWN	  ___
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
					&kp LGUI      &kp LALT     &kp LCTRL  	 &kp LSHFT		  ___    	 &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_RIGHT  &msc SCRL_RIGHT
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	    ___  		  ___       	___  		  ___  	  		___  		  ___    		 ___  	  		___      &mmv MOVE_DOWN     ___   		&mkp MB4   	  &mkp MB5
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
												  ___  	  		___  		  ___   		&mkp MB1  	  &mkp MB3  	&mkp MB2
//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };
		
		Sys {
            display-name = "Sys";
            bindings = <
//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
					&bt BT_CLR  	&bt BT_NXT  &bt BT_PRV  	XXX      &studio_unlock  &studio_unlock   	XXX 	  	  XXX  	   		XXX  	      XXX
//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
				  &bt BT_SEL 0	 &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  	  XXX    		   XXX  	  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
	&bootloader  	  XXX           XXX  		  XXX  	  		XXX  		  XXX    		   XXX 	  		XXX 		  XXX  	   		XXX   		  XXX  		&bootloader 
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
												  ___  	  		___ 		  ___   		   ___  	    ___  		  ___
//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
            >;
        };
		
    };
};
