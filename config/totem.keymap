#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <behaviors/num_word.dtsi>
#include <dt-bindings/zmk/pointing.h>

#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/totem.h"
#include "behaviors/combos.dtsi"


// DEFINE LAYERS
#define Base        0
#define Nav		    1
#define Fun		    2
#define Mouse		3
#define Game		4
#define Gameplus0	5
#define Gameplus1	6
#define Gameplus2	7
#define Sys		    8


    // DEFINE Trans/None behavior
	#define ___ &trans
	#define XXX &none

	#define QUICK_TAP_MS 175

/* Home Row Mods */
		#define KEYS_L 4 3 2 1 0 14 13 12 11 10 25 24 23 22 21 20			// left-hand keys
		#define KEYS_R 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31			// right-hand keys
		#define THUMBS 32 33 34 35 36 37									// thumb keys


#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS)                                 \
  ZMK_HOLD_TAP(NAME, bindings = <HOLD>, <TAP>; flavor = "balanced";            \
               tapping-term-ms = <280>; quick-tap-ms = <QUICK_TAP_MS>;         \
               require-prior-idle-ms = <150>; hold-trigger-on-release;         \
               hold-trigger-key-positions = <TRIGGER_POS>;)

MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS) // Left-hand HRMs.
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS) // Right-hand HRMs.


// Trigger tap-action on all interrupts - Nav cluster
#define MT_CORE                                                                \
  flavor = "tap-preferred";                                                    \
  tapping-term-ms = <220>;                                                     \
  quick-tap-ms = <220>;                                                        \
  hold-trigger-key-positions = <0>;

&mt { MT_CORE };

ZMK_HOLD_TAP(mt_home, bindings = <&masked_home>, <&kp>; MT_CORE)
ZMK_HOLD_TAP(mt_end, bindings = <&masked_end>, <&kp>; MT_CORE)


#define ZMK_COMBO_8(NAME, TAP, POS, LAYERS, COMBO_MS, IDLE_MS, HOLD, SIDE)     \
  MAKE_HRM(hm_combo_##NAME, &kp, TAP, SIDE THUMBS)                             \
  ZMK_COMBO_6(NAME, &hm_combo_##NAME HOLD 0, POS, LAYERS, COMBO_MS, IDLE_MS)

// Mask CTRL on left/right hold to avoid accidental jumps to start/end of doc.
#define MASK_MODS(NAME, MODS, BINDING)                                         \
  ZMK_MOD_MORPH(NAME, bindings = <BINDING>, <BINDING>; mods = <MODS>;)

MASK_MODS(masked_home, (MOD_LCTL), &kp HOME)
MASK_MODS(masked_end,  (MOD_LCTL), &kp END)


&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&msc {
    acceleration-exponent=<1>;
    delay-ms=<70>;
    time-to-max-speed-ms = <200>;
};

&mmv {
    acceleration-exponent=<0>;
    delay-ms=<60>;
    time-to-max-speed-ms = <200>;
};

// Misc aliases
#define CANCEL    &kp K_CANCEL            			// Cancel caps-word & auto-layers.
#define DSK_PREV  &hmr LCTRL LG(LC(LEFT)) 			// Previous desktop.
#define DSK_NEXT  &hmr LALT LG(LC(RIGHT)) 			// Next desktop.
#define PIN_WIN   &kp LG(LC(LS(Q)))       			// Pin window across desktops.
#define PIN_APP   &kp LG(LC(LS(A)))       			// Pin application across desktops.
#define VOL_DOWN  &hmr RSHFT C_VOL_DN				// Quick volume down



/* Magic-shift & auto-layers */

// Tap: repeat after alpha, else sticky-shift |
// Shift + tap/ double-tap: caps-word | Hold: shift.
	#define MAGIC_SHIFT &magic_shift LSHFT 0
		ZMK_HOLD_TAP(magic_shift, bindings = <&kp>, <&magic_shift_tap>;
             flavor = "balanced"; tapping-term-ms = <200>;
             quick-tap-ms = <QUICK_TAP_MS>;)
	
	ZMK_MOD_MORPH(magic_shift_tap, bindings = <&shift_repeat>, <&caps_word>;
              mods = <(MOD_LSFT)>;)

	ZMK_ADAPTIVE_KEY(
    	shift_repeat, bindings = <&sk LSHFT>;
    	repeat {
      		trigger-keys = <A B C D E F G H I J K L M N O P Q R S T U V W X Y Z>;
      		bindings = <&key_repeat>;
      		max-prior-idle-ms = <1200>;
      		strict-modifiers;
    	};)

// Mods deactivate caps-word, requires PR #1451. [TODO: rebase]
	&caps_word { 
  		/delete-property/ ignore-modifiers;
	};

// Tap: num-word | double-tap: sticky num-layer | Hold: num-layer.
	#define SMART_NUM &smart_num 1 0
	ZMK_HOLD_TAP(smart_num, bindings = <&mo>, <&num_dance>; flavor = "balanced";
            tapping-term-ms = <200>; quick-tap-ms = <QUICK_TAP_MS>;)
	ZMK_TAP_DANCE(num_dance, bindings = <&num_word 1>, <&sl 1>;
			tapping-term-ms = <200>;)

// Smart-mouse, requires tri-state module.
	ZMK_TRI_STATE(
    	smart_mouse, bindings = <&tog 3>, <&none>, <&tog 3>;
    	ignored-key-positions =
        	<3 2 34 33 6 7 8 15 16 17 18 19 27 28 29 35 36>;
    	ignored-layers = <1 2 3>;)

/* Custom behaviors */
// Alt+Tab swapper, requires tri-state module.
	ZMK_TRI_STATE(swapper, bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <2 7 16 17 18>;)

// Define mod-morph with a *single* mod trigger for less repetition.
	#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2)                            \
  		ZMK_MOD_MORPH(NAME, mods = <(MOD_L##MOD | MOD_R##MOD)>;                      \
                bindings = <BINDING1>, <BINDING2>;)

// Tap: comma | Shift + tap: semicolon | Ctrl + shift + tap: <.
	SIMPLE_MORPH(comma_morph, SFT, &kp COMMA, &comma_inner_morph)
	SIMPLE_MORPH(comma_inner_morph, CTL, &kp SEMICOLON, &kp LESS_THAN)

// Tap: dot | Shift + tap: colon | Ctrl + shift + tap: >.
	SIMPLE_MORPH(dot_morph, SFT, &kp DOT, &dot_inner_morph)
	SIMPLE_MORPH(dot_inner_morph, CTL, &kp COLON, &kp GREATER_THAN)

// Tap: qmark | Shift + tap: excl.
	SIMPLE_MORPH(qexcl, SFT, &kp QMARK, &kp EXCL)

// Tap: left/right parenthesis | Shft + tap: less-than/greater-than.
	SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
	SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)

// Tap: space | Shift + tap: dot -> space -> sticky shift | Hold: nav layer.
	ZMK_HOLD_TAP(lt_spc, bindings = <&mo>, <&spc_morph>; flavor = "balanced";
             tapping-term-ms = <200>; quick-tap-ms = <QUICK_TAP_MS>;)
SIMPLE_MORPH(spc_morph, SFT, &kp SPACE, &dot_spc)
	ZMK_MACRO(dot_spc, bindings = <&kp DOT &kp SPACE &sk LSHFT>; wait-ms = <0>;
          tap-ms = <5>;)

// Tap: backspace | Lshft + tap: delete | Rshft + tap: shift-delete.
	ZMK_MOD_MORPH(bs_del, bindings = <&kp BSPC>, <&kp DEL>;
              mods = <(MOD_LSFT|MOD_RSFT)>; keep-mods = <MOD_RSFT>;)

// Tap: copy | double-tap: cut.
	ZMK_TAP_DANCE(copy_cut, bindings = <&kp LC(INS)>, <&kp LC(X)>;
              tapping-term-ms = <200>;)


/* Keymap */
ZMK_CONDITIONAL_LAYER(sys, 2 1, 8)

/ {
		behaviors {

			dot_colon: dot_colon {
            	compatible = "zmk,behavior-mod-morph";
            	#binding-cells = <0>;
            	bindings = <&kp DOT>, <&kp COLON>;
            	mods = <(MOD_LSFT|MOD_RSFT)>;
        	};

			comma_semi: comma_semi {
            	compatible = "zmk,behavior-mod-morph";
            	#binding-cells = <0>;
            	bindings = <&kp COMMA>, <&kp SEMI>;
            	mods = <(MOD_LSFT|MOD_RSFT)>;
        	};

			qu_exc: qu_exc {
            	compatible = "zmk,behavior-mod-morph";
            	#binding-cells = <0>;
            	bindings = <&kp QUESTION>, <&kp EXCLAMATION>;
            	mods = <(MOD_LSFT|MOD_RSFT)>;
        	};

		// tap: backspace | shift + tap: delete
			bspc_del: backspace_delete {
				compatible = "zmk,behavior-mod-morph";
				#binding-cells = <0>;
				bindings = <&kp BSPC>, <&kp DEL>;
				mods = <(MOD_LSFT|MOD_RSFT)>;
			};

		// tap: slash | shift + tap: backslash
			slsh_bslsh: slsh_bslsh {
				compatible = "zmk,behavior-mod-morph";
				#binding-cells = <0>;
				bindings = <&kp FSLH>, <&kp BSLH>;
				mods = <(MOD_LSFT|MOD_RSFT)>;
			};

		};



		keymap {
    				compatible = "zmk,keymap";

    		Base {
        		display-name = "Base";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
									  &kp Q         &kp W         &kp E         &kp R         &kp T        	   &kp Y    	 &kp U        &kp I         &kp O         &kp P
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
								   &hml LGUI A	 &hml LALT S   &hml LCTRL D  &hml LSHFT F  	  &kp G            &kp H	  &hmr RSHFT J  &hmr RCTRL K  &hmr RALT L   &hmr RGUI SQT
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
						&kp ESC  	  &kp Z         &kp X         &kp C         &kp V         &kp B        	   &kp N    	 &kp M      &comma_semi	   &dot_colon     &qu_exc      &bspc_del
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																&lt 2 TAB     &lt 3 BSPC    &lt 1 SPACE    	 &lt 1 RET	   SMART_NUM    MAGIC_SHIFT
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                	>;
    			};


    		Nav {
        		display-name = "Nav";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
								   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5   	&kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
								   &kp LS(TAB)       ___          &kp UP	     ___         &swapper        &kp PG_UP        ___          &kp UP	      ___     &kp LS(LA(TAB))
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
						___          &kp HOME  	  &kp LEFT       &kp DOWN     &kp RIGHT      &kp END         &kp PG_DN     &kp LEFT      &kp DOWN	   &kp RIGHT   	&slsh_bslsh       ___
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																   ___           ___           ___              ___	   		  ___		   CANCEL
				// 											 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};


    		Fun {
        		display-name = "Fun";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
									 &kp F1  	   &kp F2   	  &kp F3   	    &kp F4  	  &kp F5	 	   &kp F6  	     &kp F7   	   &kp F8   	 &kp F9  	  &kp F10
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
									   ___ 	  	     ___  		   ___           ___   	     &kp F11    	  &kp F12  	  	  ___	      DSK_PREV	    DSK_NEXT		___
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
					   &kp LALT  	 VOL_DOWN    &kp C_VOL_DN  &kp C_VOL_UP   &kp C_MUTE   	   ___    		    ___			  ___		   PIN_APP		PIN_WIN			___			  ___ 
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																	___ 	  	 ___  		   ___    		    ___  	  	  ___  		    ___
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};


			Mouse {
        		display-name = "Mouse";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
									   ___  	     ___  		   ___  	  	 ___  		   ___    			___		 &msc SCRL_UP       ___		 &msc SCRL_DOWN     ___
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
									&kp LGUI      &kp LALT     &kp LCTRL  	 &kp LSHFT		   ___        	    ___		   &mkp MB4     &mmv MOVE_UP    &mkp MB5		___
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
						___  		   ___       	 ___  		   ___  	  	 ___  		   ___    	  &msc SCRL_LEFT  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_RIGHT 	  ___
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																   ___  	  	 ___  		   ___   		  &mkp MB1      &mkp MB2      &mkp MB3 
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};


    		Game {
        		display-name = "Game";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
								   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5        &kp Y  	     &kp U  	   &kp I  	 	 &kp O  	   &kp P
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
									  &kp Q         &kp T  		  &kp W         &kp E		  &kp R     	   &kp M 	     &kp J  	   &kp UP        &kp K         &kp L
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
					   &kp ESC 	      &kp Z         &kp A  		  &kp S         &kp D		  &kp F     	   &kp N  	    &kp LEFT	  &kp DOWN     &kp RIGHT     &kp GRAVE 	    &to 0
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																&lt 7 TAB     &lt 6 RET    &lt 5 SPACE       &lt 5 RET	   &lt 6 TAB 		XXX
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};

    		Gameplus0 {
        		display-name = "Gameplus0";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
								   &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0     	___  	      ___  	        ___  	 	  ___  	        ___
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
								      &kp C         &kp V  		   ___         &kp B		  &kp H             ___  	      ___  	        ___           ___           ___
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
					      ___         &kp X          ___  		   ___           ___		  &kp G             ___  	      ___           ___ 	      ___   	    ___          &to 0
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																   ___           ___           ___     	        ___	   	      ___ 		    ___
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};

			Gameplus1 {
        		display-name = "Gameplus1";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
								      &kp F1	   &kp F2		 &kp F3        &kp F4        &kp F5    	        ___  	      ___  	        ___  	      ___  	        ___
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
								      &kp F6	   &kp F7		   ___        &kp F8         &kp F9	 	        ___  	      ___  	        ___           ___           ___
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
					    &kp F10  	  &kp F11	     ___		   ___           ___         &kp F12            ___  	      ___           ___ 	      ___           ___   	    &to 0
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																   ___           ___           ___     	        ___	   	      ___ 		    ___
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};

			Gameplus2 {
        		display-name = "Gameplus2";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
									   XXX  	     XXX  	       XXX  		 XXX  		   XXX    	        ___  	      ___  	        ___  	      ___  	        ___
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
								       XXX 	         XXX         &kp UP	         XXX  	       XXX	 	        ___  	      ___  	        ___           ___           ___
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
					     ___ 	       XXX	      &kp LEFT		 &kp DOWN     &kp RIGHT        XXX              ___ 	      ___  	        ___           ___	        ___   	    &to 0
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																   ___           ___           ___     	        ___	   	      ___ 		    ___
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};

            Sys {
        		display-name = "Sys";
        			bindings = <
				//				 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
									   XXX  		 XXX  		   XXX  		 XXX      	   XXX    			XXX    		  XXX 	  	  	XXX  	   	  XXX  	        XXX
				//				 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
								   &bt BT_SEL 0	 &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  	&bt BT_CLR    	 &bt BT_CLR  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0
				// ╭─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╮
					 &bootloader  	   XXX           XXX  		   XXX  	  &bt BT_PRV  	&bt BT_NXT    	 &bt BT_NXT	  &bt BT_PRV 		XXX  	   	  XXX   		XXX  	  &bootloader 
				// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤  ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
																   ___  	  	 ___ 		   ___   		    ___  	      ___  		    ___
				//                            				 ╰─────────────┴─────────────┴─────────────╯  ╰─────────────┴─────────────┴─────────────╯
                  	>;
    			};
		};
};